"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djandjango.core.exceptions 라이브러리goproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os, json
from django.core.exceptions import ImproperlyConfigured


BASE_DIR = Path(__file__).resolve().parent.parent

db_sercret_path = os.path.join(BASE_DIR, ".secret", ".secret.json")

with open(db_sercret_path) as f:
    db_secrets = json.loads(f.read())

def get_db_secret(value, secret=db_secrets):
    try:
        return secret[value]
    except KeyError:
        error_msg = "{} 설정이 잘못되어 있습니다".format(value)
        raise ImproperlyConfigured(error_msg)

SECRET_KEY = get_db_secret("SECRET")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'

#GCS connect setting
from google.oauth2 import service_account

gcs_secret_path = os.path.join(BASE_DIR, ".secret", ".gcs.json")

with open(gcs_secret_path) as f:
    gcs_secrets = json.loads(f.read())

def get_gcs_secret(value, secret=gcs_secrets):
    try:
        return secret[value]
    except KeyError:
        error_msg = "{} 설정을 확인해주세요".format(value)
        raise ImproperlyConfigured(error_msg)
    
DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
GS_BUCKET_NAME = get_gcs_secret("GS_BUCKET_NAME")
GS_PROJECT_ID = get_gcs_secret("project_id")

GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
    gcs_secret_path
)

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': get_db_secret("DB_NAME"),
        'USER' : get_db_secret("DB_USER"),
        'PASSWORD' : get_db_secret("DB_PASSWORD"),
        'PORT' : get_db_secret("DB_PORT"),
        'HOST' : get_db_secret("DB_HOST"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
